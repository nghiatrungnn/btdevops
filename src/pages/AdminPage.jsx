import React, { useState, useEffect } from 'react';
import axios from 'axios';
import io from 'socket.io-client';
import { useNavigate } from 'react-router-dom';
import Navbar from '../components/Navbar';
import Footer from '../components/Footer';
import '../css/AdminPage.css';
import { toast, ToastContainer } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';

function AdminPage() {
  const [products, setProducts] = useState([]);
  const [errorMessage, setErrorMessage] = useState('');
  const [newProduct, setNewProduct] = useState({
    name: '',
    brand: '',
    category: '',
    price: '',
    stock: 15,
    description: '',
    image: ''
  });

  const navigate = useNavigate();

  // Fetch all products on component mount
  useEffect(() => {
    axios.get(`${process.env.REACT_APP_API_URL}/products`)
      .then(res => setProducts(res.data))
      .catch(err => console.error('L·ªói khi t·∫£i s·∫£n ph·∫©m:', err));
  }, []);

  // Socket.io ‚Äì listen to real-time new order events
  useEffect(() => {
    const socket = io(`${process.env.REACT_APP_API_URL}`);

    socket.on('connect', () => {
      console.log('üü¢ Admin connected socket:', socket.id);
    });

    socket.on('new-order', (order) => {
      toast.info(
        <div>
          <p>üì¶ ƒê∆°n h√†ng m·ªõi t·ª´ <strong>{order.user?.name || 'ng∆∞·ªùi d√πng'}</strong></p>
          <button
            onClick={() => navigate('/admin/orders')}
            style={{
              backgroundColor: '#007bff',
              color: 'white',
              border: 'none',
              padding: '6px 12px',
              borderRadius: '4px',
              cursor: 'pointer',
              marginTop: '5px'
            }}
          >
            Xem ƒë∆°n h√†ng
          </button>
        </div>,
        {
          autoClose: false,
          closeOnClick: false,
          draggable: true,
        }
      );
    });

    return () => socket.disconnect();
  }, [navigate]);

  const handleInputChange = (id, field, value) => {
    setProducts(products =>
      products.map(p => (p._id === id ? { ...p, [field]: value } : p))
    );
  };

  const handleUpdate = (product) => {
    axios.put(`${process.env.REACT_APP_API_URL}/products/${product._id}`, product)
      .then(res => {
        setProducts(products.map(p => (p._id === product._id ? res.data : p)));
        toast.success('‚úÖ C·∫≠p nh·∫≠t th√†nh c√¥ng!');
      })
      .catch(err => {
        console.error(err);
        toast.error('‚ùå C·∫≠p nh·∫≠t th·∫•t b·∫°i!');
      });
  };

  const handleDelete = (id) => {
    axios.delete(`${process.env.REACT_APP_API_URL}/products/${id}`)
      .then(() => {
        setProducts(products.filter(p => p._id !== id));
        toast.success('üóëÔ∏è X√≥a th√†nh c√¥ng!');
      })
      .catch(err => {
        console.error(err);
        toast.error('‚ùå X√≥a th·∫•t b·∫°i!');
      });
  };

  const handleAdd = () => {
    const { name, brand, category, price, image } = newProduct;

    if (!name || !brand || !category || !price || !image) {
      setErrorMessage('Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß c√°c tr∆∞·ªùng b·∫Øt bu·ªôc.');
      return;
    }

    axios.post(`${process.env.REACT_APP_API_URL}/products`, newProduct)
      .then(res => {
        setProducts([...products, res.data]);
        setNewProduct({
          name: '',
          brand: '',
          category: '',
          price: '',
          stock: 15,
          description: '',
          image: ''
        });
        setErrorMessage('');
        toast.success('üéâ Th√™m s·∫£n ph·∫©m th√†nh c√¥ng!');
      })
      .catch(err => {
        console.error(err);
        setErrorMessage('C√≥ l·ªói x·∫£y ra khi th√™m s·∫£n ph·∫©m.');
      });
  };

  return (
    <>
      <Navbar />
      <div style={{ textAlign: 'center', marginTop: '20px' }}>
  <button
    className="admin-btn"
    onClick={() => navigate('/admin/users')}
    style={{ marginBottom: '20px', backgroundColor: '#28a745', color: 'white' }}
  >
    Qu·∫£n l√Ω ng∆∞·ªùi d√πng
  </button>
</div>

      <div className="admin-container">
        <h2 className="admin-title">Qu·∫£n l√Ω s·∫£n ph·∫©m</h2>
        <table className="admin-table">
          <thead>
            <tr>
              <th>T√™n</th>
              <th>H√£ng</th>
              <th>Danh m·ª•c</th>
              <th>Gi√°</th>
              <th>T·ªìn kho</th>
              <th>M√¥ t·∫£</th>
              <th>·∫¢nh</th>
              <th>H√†nh ƒë·ªông</th>
            </tr>
          </thead>
          <tbody>
            {products.map((p) => (
              <tr key={p._id}>
                <td><input className="admin-input" value={p.name} onChange={e => handleInputChange(p._id, 'name', e.target.value)} /></td>
                <td><input className="admin-input" value={p.brand} onChange={e => handleInputChange(p._id, 'brand', e.target.value)} /></td>
                <td><input className="admin-input" value={p.category} onChange={e => handleInputChange(p._id, 'category', e.target.value)} /></td>
                <td><input className="admin-input" type="number" value={p.price} onChange={e => handleInputChange(p._id, 'price', e.target.value)} /></td>
                <td><input className="admin-input" type="number" value={p.stock} onChange={e => handleInputChange(p._id, 'stock', e.target.value)} /></td>
                <td><input className="admin-input" value={p.description} onChange={e => handleInputChange(p._id, 'description', e.target.value)} /></td>
                <td>
                  <input className="admin-input" value={p.image} onChange={e => handleInputChange(p._id, 'image', e.target.value)} />
                  {p.image && <img src={p.image} alt={p.name} className="admin-thumb" />}
                </td>
                <td>
                  <button className="admin-btn delete" onClick={() => handleDelete(p._id)}>X√≥a</button>
                  <button className="admin-btn update" onClick={() => handleUpdate(p)}>C·∫≠p nh·∫≠t</button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>

        <h3 className="admin-subtitle">Th√™m s·∫£n ph·∫©m m·ªõi</h3>
        <div className="admin-add-form">
          <input className="admin-input" placeholder="T√™n s·∫£n ph·∫©m *" value={newProduct.name} onChange={e => setNewProduct({ ...newProduct, name: e.target.value })} />
          <input className="admin-input" placeholder="H√£ng *" value={newProduct.brand} onChange={e => setNewProduct({ ...newProduct, brand: e.target.value })} />
          <input className="admin-input" placeholder="Danh m·ª•c *" value={newProduct.category} onChange={e => setNewProduct({ ...newProduct, category: e.target.value })} />
          <input className="admin-input" type="number" placeholder="Gi√° *" value={newProduct.price} onChange={e => setNewProduct({ ...newProduct, price: e.target.value })} />
          <input className="admin-input" type="number" placeholder="T·ªìn kho" value={newProduct.stock} onChange={e => setNewProduct({ ...newProduct, stock: e.target.value })} />
          <input className="admin-input" placeholder="M√¥ t·∫£" value={newProduct.description} onChange={e => setNewProduct({ ...newProduct, description: e.target.value })} />
          <input className="admin-input" placeholder="Link ·∫£nh *" value={newProduct.image} onChange={e => setNewProduct({ ...newProduct, image: e.target.value })} />

          <button className="admin-btn add" onClick={handleAdd}>Th√™m</button>
          {errorMessage && <p className="admin-error">{errorMessage}</p>}
        </div>
      </div>
      <ToastContainer position="top-right" />
      <Footer />
    </>
  );
}

export default AdminPage;
